{
  "name": "Example project",
  "type": "policy-set",
  "description": "Example description",
  "build": [
    {
      "name": "masterfiles",
      "description": "Official CFEngine Masterfiles Policy Framework (MPF)",
      "tags": ["supported", "base"],
      "repo": "https://github.com/cfengine/masterfiles",
      "by": "https://github.com/cfengine",
      "version": "3.18.3",
      "commit": "c92106b72ac9a9f12e412df7ecba1ea22bcb373a",
      "added_by": "cfbs add",
      "steps": ["run ./prepare.sh -y", "copy ./ ./"]
    },
    {
      "name": "inventory-sudoers",
      "description": "Inventory users with sudo access.",
      "tags": ["supported", "inventory", "security", "sudo"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-sudoers",
      "by": "https://github.com/nickanderson",
      "version": "1.0.2",
      "commit": "ba9768f0e09914e41dae95fbf81caed90c1e6ed4",
      "added_by": "cfbs add",
      "steps": [
        "copy ./policy/main.cf services/inventory-sudoers/main.cf",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "default-encrypt-method-sha512",
      "description": "Sets the default password hashing algorithm to SHA-512 (encrypt_method in /etc/login.defs)",
      "tags": ["supported", "security"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "default-encrypt-method-sha512",
      "added_by": "cfbs add",
      "steps": [
        "json cfbs/def.json def.json",
        "copy policy/default-encrypt-method-sha512.cf services/security-hardening/default-encrypt-method-sha512/default-encrypt-method-sha512.cf"
      ]
    },
    {
      "name": "library-sshd-config",
      "description": "This module provides policy for managing sshd configuration.",
      "tags": ["library", "security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-ssh",
      "by": "https://github.com/nickanderson",
      "version": "0.1.0",
      "commit": "abff34c08bf27af56c4c3939bbb6f848eac7fb8d",
      "subdirectory": "modules/library-sshd-config/",
      "added_by": "ssh-permit-root-login-no",
      "steps": [
        "copy ./global-key-values.cf services/library-sshd-config/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "ssh-permit-root-login-no",
      "description": "This module ensures that the SSH daemon does not permit logging in as root",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-permit-root-login-no/",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-permit-root-login-no.cf services/security-hardening/ssh-permit-root-login-no/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "autorun",
      "description": "Enable autorun functionality",
      "tags": ["supported", "management"],
      "repo": "https://github.com/cfengine/modules",
      "by": "https://github.com/olehermanse",
      "version": "1.0.1",
      "commit": "c3b7329b240cf7ad062a0a64ee8b607af2cb912a",
      "subdirectory": "management/autorun",
      "added_by": "uninstall-telnet-server",
      "steps": ["json def.json def.json"]
    },
    {
      "name": "uninstall-telnet-server",
      "description": "This module ensures the telnet server package is not installed on the system",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.3",
      "commit": "b0c5d6e9f2a9fb5904cb1eb9cd948ee7907969ea",
      "subdirectory": "uninstall-telnet-server",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./telnet_server_policy.cf services/autorun/telnet_server_policy.cf"
      ]
    },
    {
      "name": "inventory-kernel-boot-params",
      "description": "Inventory kernel parameters set during system boot",
      "tags": ["supported", "inventory"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-kernel-boot-params",
      "by": "https://github.com/nickanderson",
      "version": "0.1.2",
      "commit": "ab79409970b97831cfb9552d98ca6a8f455e11d4",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-kernel-boot-params/main.cf",
        "json augments.json def.json"
      ]
    },
    {
      "name": "ssh-max-auth-tries",
      "description": "This module limits the maximum authentication attempts (default to 3)",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-max-auth-tries/",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-max-auth-tries.cf services/security-hardening/ssh-max-auth-tries/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "sudo-enforce-allowed-users",
      "description": "This module ensures the following lines 'ALL ALL=(ALL) ALL' and 'ALL ALL=(ALL:ALL) ALL' are not present in /etc/sudoers.conf",
      "tags": ["security", "management", "sudo", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.2",
      "commit": "ab4f6c01c2f41dfdfef05100eac4c8abf894b74c",
      "subdirectory": "./sudo-enforce-allowed-users/",
      "added_by": "cfbs add",
      "steps": [
        "copy ./sudo-enforce-allowed-users.cf services/security-hardening/sudo-enforce-allowed-users/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-lastlog",
      "description": "Inventory users who have logged in and when.",
      "tags": ["inventory", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-inventory-lastlog",
      "by": "https://github.com/nickanderson",
      "version": "0.1.1",
      "commit": "7436a6ca9d1a159e6083768b9c06d9b1cbb189a0",
      "added_by": "cfbs add",
      "steps": [
        "copy policy/main.cf services/inventory-lastlog/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "uninstall-ftp",
      "description": "This module has a policy file which makes sure the ftp server package is not installed on the system",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/craigcomstock/cfengine-security-hardening",
      "by": "https://github.com/craigcomstock",
      "version": "0.0.2",
      "commit": "2ec06ea5e78b0ad39cfde0137e0a8c25a983fae8",
      "subdirectory": "uninstall-ftp",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": ["copy ./uninstall_ftp.cf services/autorun/uninstall_ftp.cf"]
    },
    {
      "name": "cfengine-supported",
      "description": "Inventory the support status for the current version of CFEngine.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-supported",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "6a09cc850423a063533ffe19e9066753952b9d8d",
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-cfengine-version-support-status.cf services/cfengine-supported/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "library-parsed-local-users",
      "description": "Parse local users from /etc/passwd on the system with their attributes from /etc/shadow",
      "tags": ["supported", "library"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.5",
      "commit": "ede282c34083ab807543aa734b1142228ab98993",
      "subdirectory": "parsed_etc_passwd_shadow/",
      "added_by": "inventory-local-users-non-root-has-uid-0",
      "steps": [
        "copy ./parsed_etc_passwd_shadow.cf services/local-users/parsed_etc_passwd_shadow/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-local-users-non-root-has-uid-0",
      "description": "Inventory the non-root users that have uid 0",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-local_users",
      "by": "https://github.com/nickanderson",
      "version": "2.0.5",
      "commit": "fef5d94170f8119eda8f5bf8316acf5896fbac22",
      "subdirectory": "inventory_non_root_users_with_uid_zero/",
      "dependencies": ["library-parsed-local-users"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-non-root-users-with-uid-zero.cf services/local-users/inventory_non_root_users_with_uid_zero/inventory-non-root-users-with-uid-zero.cf",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "compliance-report-imports",
      "description": "Keep compliance report definitions up to date",
      "tags": ["experimental", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.8",
      "commit": "06f0894b662befbba4e775884f21cfe8573c32d6",
      "subdirectory": "./compliance-report-imports",
      "dependencies": ["autorun"],
      "added_by": "compliance-report-os-is-vendor-supported",
      "steps": ["copy ./compliance-report-imports.cf services/autorun/"]
    },
    {
      "name": "compliance-report-os-is-vendor-supported",
      "description": "Compliance report definition for checking if the current OS version is supported by the vendor",
      "tags": ["experimental", "compliance-report", "cfengine-enterprise"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.2",
      "commit": "d9e0aad225535b2b16ba2126e8302f8ffc5e7d38",
      "subdirectory": "./compliance-report-os-is-vendor-supported",
      "dependencies": ["compliance-report-imports"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./os-is-vendor-supported.json .no-distrib/compliance-report-definitions/os-is-vendor-supported.json"
      ]
    },
    {
      "name": "uninstall-openldap-server",
      "description": "This module has a policy file which makes sure the openldap server package is not installed on the system",
      "tags": ["security", "compliance", "experimental"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.2",
      "commit": "b0c5d6e9f2a9fb5904cb1eb9cd948ee7907969ea",
      "subdirectory": "uninstall-openldap-server",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./openldap_server_policy.cf services/autorun/openldap_server_policy.cf"
      ]
    },
    {
      "name": "inventory-writable-directories-in-root-path",
      "description": "This module inventories directories in root's $PATH that are world or group writable.",
      "tags": ["supported", "inventory", "security"],
      "repo": "https://github.com/nickanderson/cfengine-writable-directories-in-root-path",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "11fe0552d0cfde9d7280c629cea18cb0e2fd2a8b",
      "subdirectory": "./inventory-writable-directories-in-root-path/",
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory-world-group-writable-root-path.cf services/world-writable-directories-in-root-path/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "ntp-maxpoll",
      "description": "This module ensures that maxpoll is configured to 10 unless default:ntp_maxpoll._config[maxpoll] is defined in which case that value will be used.",
      "tags": ["supported", "security", "management"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.3",
      "commit": "e2519214e8a29c7f37a36ca8a4beec687712448d",
      "subdirectory": "./ntp-maxpoll/",
      "added_by": "cfbs add",
      "steps": [
        "copy ./ntp-maxpoll.cf services/security-hardening/ntp-maxpoll/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "ssh-protocol-2",
      "description": "This module ensures that the SSH daemon uses SSH protocol 2.",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.3",
      "commit": "124b01041a3d45010ac20912338795e81e2a06fe",
      "subdirectory": "./ssh-protocol-2/",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-protocol-2.cf services/security-hardening/ssh-protocol-2/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "sudo-requires-passwords",
      "description": "This module ensures that sudo requires password (there are no 'NOPASSWD' in /etc/sudoers)",
      "tags": ["security", "management", "sudo", "experimental"],
      "repo": "https://github.com/Lex-2008/sudo-requires-passwords",
      "by": "https://github.com/Lex-2008",
      "version": "1.0.0",
      "commit": "ff6108188291ae2e8074d2fa55786e4270e803af",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./sudo-requires-password.cf services/autorun/sudo-requires-password.cf"
      ]
    },
    {
      "name": "disable-prelinking",
      "description": "Disable prelinking.",
      "tags": ["supported", "security"],
      "repo": "https://github.com/larsewi/cfengine-prelinking-disabled",
      "by": "https://github.com/larsewi",
      "version": "1.0.3",
      "commit": "4b309622404e6a6e989989a229fe780bec029de5",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./disable_prelinking.cf services/autorun/disable_prelinking.cf"
      ]
    },
    {
      "name": "ssh-permit-empty-passwords-no",
      "description": "This module ensures that PermitEmptyPasswords is set to no.",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.4",
      "commit": "705cd6a9c90b691b78a18876f1980d4d16fc9b1c",
      "subdirectory": "./ssh-permit-empty-passwords-no/",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-permit-empty-passwords-no.cf services/security-hardening/ssh-permit-empty-passwords-no/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "root-path-enforce-permissions",
      "description": "This module enforces that directories in root's $PATH are not world or group writable.",
      "tags": ["supported", "management", "security"],
      "repo": "https://github.com/nickanderson/cfengine-writable-directories-in-root-path",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "11fe0552d0cfde9d7280c629cea18cb0e2fd2a8b",
      "subdirectory": "./root-path-enforce-permissions/",
      "dependencies": ["inventory-writable-directories-in-root-path"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./root-path-enforce-group-other-not-writable.cf services/world-writable-directories-in-root-path/",
        "json ./cfbs/def.json def.json"
      ]
    },
    {
      "name": "tmp-nosuid",
      "description": "This module has a policy file which makes sure /tmp is mounted with the 'nosuid' option",
      "tags": ["supported", "security", "compliance", "tmp"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.2",
      "commit": "5be7c3ef332138b5717231d289bda59449b66d5c",
      "subdirectory": "tmp-nosuid",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": ["copy ./tmp_nosuid.cf services/autorun/tmp_nosuid.cf"]
    },
    {
      "name": "tmp-file-age",
      "description": "This module inventories and manages old files in /tmp.",
      "tags": ["supported", "inventory", "management", "security", "tmp"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "0.0.1",
      "commit": "56a7c149f33808db6796de77eff6eb0502c01e61",
      "subdirectory": "./tmp-file-age/",
      "added_by": "cfbs add",
      "steps": [
        "copy ./tmp-file-age.cf services/security-hardening/tmp-file-age/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "ssh-ciphers-strong",
      "description": "This module ensures that the SSH daemon uses strong ciphers",
      "tags": ["security", "ssh", "experimental"],
      "repo": "https://github.com/nickanderson/cfengine-security-hardening",
      "by": "https://github.com/nickanderson",
      "version": "1.0.4",
      "commit": "7c5e3638ddcf2ba097644eefe0a3bc9d7f2269e6",
      "subdirectory": "./ssh-ciphers-strong/",
      "dependencies": ["library-sshd-config"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./ssh-ciphers-strong.cf services/security-hardening/ssh-ciphers-strong/",
        "json cfbs/def.json def.json"
      ]
    },
    {
      "name": "inventory-yum-update-info",
      "description": "This module adds information about security updates from 'yum updateinfo' to inventory",
      "tags": ["supported", "security", "compliance"],
      "repo": "https://github.com/vpodzime/cfengine-security-hardening",
      "by": "https://github.com/vpodzime",
      "version": "0.0.1",
      "commit": "c89da2dbdf2f8a4baf7b6646d2e15e98a00ff365",
      "subdirectory": "inventory-yum-update-info",
      "dependencies": ["autorun"],
      "added_by": "cfbs add",
      "steps": [
        "copy ./inventory_yum_update_info.cf services/autorun/inventory_yum_update_info.cf"
      ]
    }
  ],
  "git": true
}
