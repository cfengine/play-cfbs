body file control
{
  namespace => "personal";
}

bundle agent personal
{
  classes:
    alpinelinux::
      "user_${users}_present" expression => returnszero("grep ${users} /etc/passwd >/dev/null", "useshell");

  vars:
    "skel" string => "/etc/skel";
"ignore_dirs" slist => {
"\.local",
"src",
"cfe",
"BACKUP",
"\.cache"
};
  users:
    # todo alpinelinux linux support, alternate, use commands? should work for openbsd in a similar way :)
    linux.!termux.!alpinelinux:: # no support for openbsd, windows or termux yet
      "${users}"
policy => "present",
home_dir => "/home/${users}",
home_bundle => home_skel(${users}, ${skel});

  commands:
    alpinelinux::
      "adduser -D ${users}"
        if => not("user_${users}_present"),
        contain => default:in_shell;

  files:
    "/home/${users}/."
      perms => default:og(${users},${users}),
      depth_search => homedir_ownership("inf",@(ignore_dirs));

  # todo: will probably need a layer of indirection here to support different package names on different systems
# move packages list from json to here so I can easily comment on WHY including those packages
# json is NOT friendly enough for me, sorry.
# oathtool for github 2fa
  packages:
    linux|termux:: # no windows or openbsd yet
    "${base_packages}" # stuff for "everybody"
      policy => "present";

  reports:
    "managing user: ${users}";
}

bundle agent home_skel(user, skel)
{
  files:
    "/home/${user}/."
      create => "true",
      copy_from => default:seed_cp(${skel}),
      depth_search => homedir_ownership("inf", @(ignore_dirs));
}

body depth_search homedir_ownership(d, list)
{
  depth => "${d}";
  exclude_dirs => { @(list) };
  include_basedir => "true";
}
